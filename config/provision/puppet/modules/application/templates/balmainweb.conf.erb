
upstream <%= app_name %> {
  server  unix:/tmp/thin.0.sock;
}

server {
  listen 80 default_server;
  listen 8080;
  server_name localhost;
  root <%= app_dir %>current/public;

  location / {

    # ensure POST requests are forwarded to upstream <%= app_name %>
    #error_page 405 = http://<%= app_name %>;
    error_page 405 = $uri;
    try_files $uri http://<%= app_name %> ;

    # needed to forward user's IP address to rails
    proxy_set_header  X-Real-IP  $remote_addr;

    # needed for HTTPS
    proxy_set_header X_FORWARDED_PROTO https;

    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_max_temp_file_size 0;
    proxy_redirect off;

    # If the file exists as a static file serve it directly without
    # running all the other rewite tests on it
    #if (-f $request_filename/index.html) {
    #  rewrite (.*) $1/index.html break;
    #}

    # this is the meat of the rails page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewite the url to have explicit .html on the end
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the
    # necessary headers and proxies to our upstream mongrels
    #if (-f $request_filename.html) {
    #  rewrite (.*) $1.html break;
    #}

    if (!-f $request_filename) {
    proxy_pass http://<%= app_name %>;
      break;
    }
  }

}
